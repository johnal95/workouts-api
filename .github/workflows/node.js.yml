name: NodeJS CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  Build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.13.0]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run build

  Lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.13.0]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

  Test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.13.0]
    env:
      DYNAMO_DB_PORT: 8000
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Docker compose
        run: docker compose up &

      - name: Install dependencies
        run: npm ci

      - name: Debug DynamoDB
        run: node ./test-dynamodb.js

      - name: Test
        run: npm run test
