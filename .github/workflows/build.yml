name: Build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  NODE_VERSION: 20.16.0

jobs:
  audit:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup NodeJS ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - name: Audit
        run: |
          npm ci --ignore-scripts --omit=dev
          npm audit --omit=dev

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup NodeJS ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - name: Lint
        run: |
          npm ci --ignore-scripts
          npm run lint

  test:
    runs-on: ubuntu-latest
    env:
      CI: true
      DYNAMO_DB_PORT: 8000
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup NodeJS ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - name: Docker compose
        run: |
          docker compose up --wait
      - name: Test and audit
        run: |
          npm ci --ignore-scripts
          npm run test

  build:
    needs: [audit, lint, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Build Docker image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t "$GITHUB_REPOSITORY:$IMAGE_TAG" .
